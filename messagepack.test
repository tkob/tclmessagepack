lappend auto_path .

package require tcltest
package require messagepack

namespace import tcltest::test
namespace import messagepack::unpack_string

tcltest::configure {*}$argv

test {unpack nil} {} {unpack_string "\xc0"} %nil
test {unpack false} {} {unpack_string "\xc2"} false
test {unpack true} {} {unpack_string "\xc3"} true

test {unpack min positive fixnum} {} {unpack_string "\x00"} 0
test {unpack max positive fixnum} {} {unpack_string "\x7f"} 127
test {unpack uint 8} {} {unpack_string "\xcc\x80"} 128
test {unpack max uint 8} {} {unpack_string "\xcc\xff"} 255
test {unpack uint 16} {} {unpack_string "\xcd\x01\x00"} 256
test {unpack max uint 16} {} {unpack_string "\xcd\xff\xff"} 65535
test {unpack uint 32} {} {unpack_string "\xce\x00\x01\x00\x00"} 65536
test {unpack max uint 32} {} {unpack_string "\xce\xff\xff\xff\xff"} 4294967295
test {unpack uint 64} {} {unpack_string "\xcf\x00\x00\x00\x01\x00\x00\x00\x00"} 4294967296
test {unpack max uint 64} {} {unpack_string "\xcf\xff\xff\xff\xff\xff\xff\xff\xff"} 18446744073709551615

test {unpack max negative fixnum} {} {unpack_string "\xff"} -1
test {unpack min negative fixnum} {} {unpack_string "\xe0"} -32
test {unpack int 8} {} {unpack_string "\xd0\xdf"} -33
test {unpack min int 8} {} {unpack_string "\xd0\x80"} -128
test {unpack int 16} {} {unpack_string "\xd1\xff\x7f"} -129
test {unpack min int 16} {} {unpack_string "\xd1\x80\x00"} -32768
test {unpack int 32} {} {unpack_string "\xd2\xff\xff\x7f\xff"} -32769
test {unpack min int 32} {} {unpack_string "\xd2\x80\x00\x00\x00"} -2147483648
test {unpack int 64} {} {unpack_string "\xd3\xff\xff\xff\xff\x7f\xff\xff\xff"} -2147483649
test {unpack min int 64} {} {unpack_string "\xd3\x80\x00\x00\x00\x00\x00\x00\x00"} -9223372036854775808

test {unpack 0.0 in float 64} {} {unpack_string "\xcb\x00\x00\x00\x00\x00\x00\x00\x00"} 0.0
test {unpack -0.0 in float 64} {} {unpack_string "\xcb\x80\x00\x00\x00\x00\x00\x00\x00"} -0.0
test {unpack NaN in float 64} {} {unpack_string "\xcb\x7f\xf8\x00\x00\x00\x00\x00\x00"} NaN
test {unpack -NaN in float 64} {} {unpack_string "\xcb\xff\xf8\x00\x00\x00\x00\x00\x00"} -NaN
test {unpack Inf in float 64} {} {unpack_string "\xcb\x7f\xf0\x00\x00\x00\x00\x00\x00"} Inf
test {unpack -Inf in float 64} {} {unpack_string "\xcb\xff\xf0\x00\x00\x00\x00\x00\x00"} -Inf
test {unpack pi} {} {unpack_string "\xcb\x40\x09\x21\xfb\x54\x44\x2d\x18"} [expr {atan(1) * 4}]
test {unpack minus pi} {} {unpack_string "\xcb\xc0\x09\x21\xfb\x54\x44\x2d\x18"} [expr {atan(1) * 4 * -1}]
test {} {} {unpack_string "\xcb\x7f\xef\xff\xff\xff\xff\xff\xff"} [expr {(2.0 - pow(2, -52)) * pow(2, 1023)}]
test {} {} {unpack_string "\xcb\xff\xef\xff\xff\xff\xff\xff\xff"} [expr {-(2.0 - pow(2, -52)) * pow(2, 1023)}]
test {} {} {unpack_string "\xcb\x00\x00\x00\x00\x00\x00\x00\x01"} [expr {pow(2, -1022 - 52)}]
test {} {} {unpack_string "\xcb\x80\x00\x00\x00\x00\x00\x00\x01"} [expr {-pow(2, -1022 - 52)}]
test {} {} {unpack_string "\xcb\x00\x10\x00\x00\x00\x00\x00\x00"} [expr {pow(2, -1022)}]
test {} {} {unpack_string "\xcb\x80\x10\x00\x00\x00\x00\x00\x00"} [expr {-pow(2, -1022)}]
test {} {} {unpack_string "\xcb\x00\x0f\xff\xff\xff\xff\xff\xff"} [expr {0x1FFFFFFFFFFFFF * pow(2, -1022.0 - 52.0) - pow(2, -1022)}]

test {unpack 0.0 in float 32} {} {unpack_string "\xca\x00\x00\x00\x00"} 0.0
test {unpack -0.0 in float 32} {} {unpack_string "\xca\x80\x00\x00\x00"} -0.0
test {unpack NaN in float 32} {} {unpack_string "\xca\x7f\xc0\x00\x00"} NaN
test {unpack -NaN in float 32} {} {unpack_string "\xca\xff\xc0\x00\x00"} -NaN
test {unpack Inf in float 32} {} {unpack_string "\xca\x7f\x80\x00\x00"} Inf
test {unpack -Inf in float 32} {} {unpack_string "\xca\xff\x80\x00\x00"} -Inf
test {unpack max finite 32} {} {unpack_string "\xca\x7f\x7f\xff\xff"} [expr {(2.0 - pow(2, -23.0)) * pow(2, 127.0)}]
test {} {} {unpack_string "\xca\xff\x7f\xff\xff"} [expr {-(2.0 - pow(2, -23.0)) * pow(2, 127.0)}]
test {unpack min pos 32} {} {unpack_string "\xca\x00\x00\x00\x01"} [expr {pow(2, (-126.0 - 23.0))}]
test {} {} {unpack_string "\xca\x80\x00\x00\x01"} [expr {-pow(2, (-126.0 - 23.0))}]
test {unpack min normal pos 32} {} {unpack_string "\xca\x00\x80\x00\x00"} [expr {pow(2, -126.0)}]
test {} {} {unpack_string "\xca\x80\x80\x00\x00"} [expr {-pow(2, -126.0)}]
test {unpack max subnormal 32} {} {unpack_string "\xca\x00\x7f\xff\xff"} [expr {0xffffff * pow(2, (-126.0 - 23.0)) - pow(2, -126)}]
test {} {} {unpack_string "\xca\x80\x7f\xff\xff"} [expr {-(0xffffff * pow(2, (-126.0 - 23.0)) - pow(2, -126))}]

test {unpack empty string} {} {unpack_string "\xa0"} [list {%str {}}]
test {unpack 31-bytes string} {} {unpack_string "\xbf\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a_"} [list [list %str {羊羊羊羊羊羊羊羊羊羊_}]]
test {unpack 32-bytes string} {} {unpack_string "\xd9\x20_\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a\xe7\xbe\x8a_"} [list [list %str {_羊羊羊羊羊羊羊羊羊羊_}]]
test {unpack 65535-bytes string} {} {unpack_string "\xda\xff\xff[string repeat "\xe7\xbe\x8a" 21845]"} [list [list %str [string repeat {羊} 21845]]]
test {unpack 65536-bytes string} {} {unpack_string "\xdb\x00\x01\x00\x00_[string repeat "\xe7\xbe\x8a" 21845]"} [list [list %str "_[string repeat {羊} 21845]"]]

test {unpack empty array} {} {unpack_string "\x90"} [list [list {%lst}]]
test {unpack 1-element array} {} {unpack_string "\x91\x00"} [list {%lst 0}]
test {unpack 15-elements array} {} {unpack_string "\x9f\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"} [list [list %lst 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]]
test {unpack 65535-elements array} {} {unpack_string "\xdc\xff\xff[string repeat "\x00" 65535]"} [list [list %lst {*}[lrepeat 65535 0]]]
test {unpack 65536-elements array} {} {unpack_string "\xdd\x00\x01\x00\x00[string repeat "\x00" 65536]"} [list [list %lst {*}[lrepeat 65536 0]]]
test {unpack array of array} {} {unpack_string "\x92\x92\x01\x02\x92\x03\x04"} [list {%lst {%lst 1 2} {%lst 3 4}}]

tcltest::cleanupTests
